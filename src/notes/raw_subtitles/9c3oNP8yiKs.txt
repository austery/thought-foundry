I
 think
 startups
 are
 basically
 like


getting
 slapped
 in
 the
 face
 probably


over
 and
 over
 again.
 That's
 basically


it.
 I
 also,
 you
 know,
 interestingly,
 I
 I


actually
 like
 failures
 a
 lot.
 One
 of
 the


things
 I
 hate
 the
 most
 is
 doing


something
 and
 not
 knowing
 if
 it's


working
 or
 not.
 And
 it's
 actually
 very


it's
 very
 freeing
 to
 know
 when
 something


fails
 because
 that's
 very
 obvious.
 I


like
 when
 decisions
 are
 obvious.
 Like


when
 something
 fails,
 it's
 obvious
 you


need
 to
 do
 something
 new.
 And
 the
 faster


you
 fail,
 actually,
 the
 faster
 you
 can


decide
 to
 do
 something
 new.
 And
 I
 think


for
 a
 company
 like
 us,
 like
 we're
 at
 the


frontier
 of
 the
 technology,
 we
 should
 be


imagining
 we
 are
 failing
 at
 a
 lot
 of


initiatives.
 In
 fact,
 if
 everything
 is


working,
 we're
 operating
 at
 less
 than


potential
 of
 the
 company.
 We
 should
 be


failing.
 Like
 that
 probably
 means
 we're


not
 betting.
 We're
 not
 taking
 enough


bets
 if
 we're
 not
 failing
 enough.
 I
 I


think
 it's
 like
 a
 required
 part
 of
 a


company
 that
 you
 that
 you
 fail.
 I'd
 say


like
 be
 more
 humble
 about
 your
 ideas.


And
 I
 wouldn't
 say
 that
 I
 was
 arrogant


at
 the
 time,
 but
 probably
 a
 lot
 more


idealistic
 about
 our
 ideas
 being


correct.
 And
 you
 need
 some
 amount
 of


idealism
 as
 I
 said
 before,
 but
 at
 the


same
 time,
 it's
 that
 there's
 no
 reason


why
 an
 idea
 is
 great
 if
 you
 haven't
 like


validated
 it.
 be
 honest
 with
 yourselves


about,
 you
 know,
 the
 viability
 of
 your


idea
 and
 be
 willing
 to
 pivot
 very


quickly.
 I
 feel
 like
 a
 lot
 of
 a
 lot
 of


founders
 hate
 the
 word
 pivot,
 but
 it's


it's
 awesome.
 Like,
 it's
 awesome.
 You


know,
 what
 sucks
 more
 is
 like
 doing
 the


wrong
 thing
 and
 just
 failing.
 Even
 right


now,
 I
 would
 say
 one
 of
 my
 regrets
 is


probably
 not
 doing
 the
 pivot
 3
 months


earlier.


Hey,
 I'm
 Verun,
 CEO
 and
 co-founder
 of


Windsurf.
 So,
 Windsurf
 is
 an
 AI
 powered


ID
 uh
 that
 provides
 agentic
 capabilities


that
 enables
 developers
 and


non-developers
 to
 build
 apps
 really


quickly
 and
 also
 modify
 existing


applications
 really
 quickly.
 A
 million


developers
 have
 actually
 used
 the


product.
 We
 have
 hundreds
 of
 thousands


of
 monthly
 active
 users
 on
 the
 on
 the


product
 right
 now
 and
 it's
 growing,
 you


know,
 exponentially
 faster
 with
 time.


So,
 I
 graduated
 from
 MIT
 in
 2017
 and


after
 that
 I
 actually
 worked
 at
 an


autonomous
 vehicle
 company
 in
 Mountain


View
 called
 Nuro.
 there
 sort
 of
 got
 an


early
 taste
 of
 what
 deep
 learning
 could


do
 for
 other
 industries.
 Started
 the


company
 actually
 in
 2021,
 so
 it's
 been
 4


years.
 At
 the
 time,
 the
 company
 didn't


do
 anything
 relating
 to
 code
 AI.
 It


actually
 built
 out
 GPU
 virtualization


and
 compiler
 technology.
 We
 did
 that
 for


over
 a
 year
 and
 a
 half
 and
 were
 able
 to


get
 to
 a
 couple
 million
 in
 revenue.
 We


had
 eight
 employees
 at
 the
 time.
 One


thing
 changed
 very
 very
 materially
 in


that
 time.
 In
 the
 middle
 of
 2022,
 GPT


3.5
 came
 out
 at
 that
 point
 and
 we


thought
 that
 generative
 models
 would


fundamentally
 transform
 many
 different


industries
 and
 we
 needed
 to
 make
 kind
 of


a
 pretty
 big
 decision
 at
 that
 point
 to


pivot
 the
 company
 because
 we


fundamentally
 felt
 everyone
 was
 going
 to


run
 generative
 models
 for
 everything.


And
 at
 that
 point
 we
 believed
 a
 lot
 of


the
 value
 would
 acrue
 to
 companies
 that


were
 applications
 almost
 like
 in
 the


early
 days
 of
 the
 internet
 the
 companies


that
 proved
 to
 be
 very
 valuable
 were


companies
 like
 Google
 and
 Amazon
 and
 we


wanted
 to
 see
 what
 would
 it
 be
 like
 if


we
 could
 build
 the
 next
 Google
 or


Amazon.
 We
 were
 early
 adopters
 of
 a


product
 called
 GitHub
 Copilot
 and
 from


there
 we
 actually
 built
 out
 a
 product


called
 Kodium
 which
 was
 an
 extension


that
 lived
 in
 all
 the
 major
 IDEs
 and
 we


were
 able
 to
 get
 that
 to
 over
 a
 million


users
 as
 well.
 Um,
 and
 we
 ended
 up


serving
 some
 of
 the
 world's
 largest


enterprises,
 companies
 like
 JP
 Morgan


Chase.
 Very
 quickly
 though,
 sort
 of


middle
 of
 last
 year,
 we
 realized
 that
 we


needed
 to
 control
 more
 of
 the


experience,
 especially
 as
 these
 models


became
 more
 and
 more
 agentic.
 And
 that


was
 why
 we
 decided
 to
 build
 our
 own
 ID,


which
 was
 Windsurf.
 That
 has
 taken
 off


very
 quickly
 as
 well.


[Music]


It's
 actually
 kind
 of
 interesting.
 I


think
 MIT
 is
 very
 different
 than


Stanford.
 I
 think
 most
 people
 don't
 go


to
 MIT
 to
 kind
 of
 immediately
 start
 a


company.
 I
 don't
 think
 my
 aspirations


were
 to
 start
 a
 company.
 I
 did


progressively
 intern
 at
 smaller
 and


smaller
 companies.
 So
 I
 first
 interned


at
 LinkedIn,
 then
 after
 that
 Quora
 uh


and
 then
 data
 bricks.
 Data
 bricks
 at


that
 time
 was
 a
 very
 small
 engineering


team.
 They
 were
 not
 even
 a
 unicorn
 at


that
 time.
 But
 I
 think
 I
 didn't
 actually


end
 up
 working
 at
 any
 of
 these
 companies


because
 I
 think
 the
 thing
 that
 motivated


me
 was
 can
 I
 be
 a
 meaningful
 part
 of
 a


visionary
 company
 working
 with
 motivated


people.
 That's
 always
 been
 what's
 driven


me
 and
 that's
 sort
 of
 why
 immediately


after
 MIT
 I
 decided
 to
 go
 work
 at
 an


autonomous
 vehicle
 company.
 I
 thought


that
 could
 be
 the
 future
 of
 where
 just


robotics
 was
 going
 to
 go
 and
 I
 think
 for


me
 and
 probably
 the
 other
 people
 at
 the


company
 we
 want
 to
 work
 on
 the
 future
 of


technology
 and
 that's
 what
 truly


motivates
 us.
 I
 think
 the
 motiv
 is
 just


how
 do
 you
 build
 products
 in
 hard


technology
 spaces
 where
 the
 technology


is
 not
 there
 yet.
 You
 know
 I
 I'll
 give


like
 a
 quick
 just
 some
 interesting


numbers.
 You
 know,
 when
 we
 started,


obviously,
 deep
 learning
 was
 was
 pretty


popular.
 Uh,
 but
 the
 amount
 of
 compute


that
 these
 models
 had
 access
 to
 grew


exponentially
 year-over-year.
 You
 know,


just
 some
 numbers
 here.
 In
 2017,
 the


number
 of
 teraflops
 on
 a
 consumer
 grade


GPU
 was
 10.
 By
 the
 end
 of
 2022,
 it
 was


actually
 700.
 So,
 it's
 a
 massive


increase
 of
 in
 compute
 that
 happened.


And
 I
 think
 what
 we
 learned
 was
 machine


learning
 models
 were
 going
 to
 get
 more


capable
 very
 quickly.
 And
 you
 should
 not


bet
 on
 where
 the
 technology
 is
 today,


but
 where
 it
 could
 be
 a
 couple
 years


from
 now,
 right?
 And
 if
 all
 you're
 doing


is
 working
 on
 products
 that
 work
 today,


you're
 going
 to
 be
 quickly
 irrelevant
 a


year
 from
 now.
 And
 that
 was
 like
 a
 very


important
 lesson
 that
 we
 I
 think
 a
 lot


of
 a
 lot
 of
 people
 that
 were
 in
 the


autonomous
 vehicle
 space
 kind
 of


learned,
 which
 is
 now
 if
 you
 were
 to


look
 at
 autonomous
 vehicles,
 they're


much
 more
 machine
 learning
 based
 than


they
 were
 probably
 5
 or
 6
 years
 ago.


Originally,
 we
 started
 out
 the
 name
 of


the
 company
 was
 Exaf
 Function.
 Part
 of


the
 reason
 why
 we
 called
 it
 exunction


was
 our
 goal
 was
 to
 virtualize
 GPU


computations
 to
 make
 it
 easier
 to
 run


things
 on
 GPUs.
 And
 the
 the
 term
 exa


function
 means
 we
 want
 to
 run
 an
 exa


number
 of
 functions
 which
 is
 10
 to
 the


18
 functions.
 I
 think
 the
 biggest


learning
 lesson
 for
 us
 was
 at
 the
 time


was
 even
 if
 we
 were
 succeeding
 by
 some


metrics
 we
 were
 making
 some
 revenue
 just


accepting
 that
 hey
 like
 the
 business


might
 not
 be
 the
 best
 business
 and
 we


need
 to
 go
 pivot
 was
 a
 very
 hard
 thing


to
 do
 I
 would
 say
 right
 it's
 very
 hard


when
 you
 have
 like
 employees
 you
 know


you've
 already
 raised
 some
 amount
 of


funding
 I
 think
 at
 the
 time
 we
 had


raised
 over
 $28
 million
 of
 funding
 to


basically
 start
 from
 scratch
 overnight


uh
 but
 one
 of
 the
 learning
 lessons
 that


I've
 sort
 of
 had
 and
 probably
 the
 other


people
 at
 the
 company
 is
 every
 time
 you


do
 a
 pivot
 you
 have
 an
 opport


opportunity
 to
 maybe
 10x
 the
 size
 of
 the


company.
 And
 uh
 usually
 when
 you
 have
 an


idea
 that
 you
 don't
 believe
 in
 and
 the


ceiling
 is
 low,
 it's
 actually
 better
 to


just
 scrap
 the
 entire
 thing
 than
 to
 like


try
 to
 incrementally
 claw
 and
 you
 know


increase
 the
 value
 of
 what
 you're
 doing


by
 like
 you
 know
 20
 30%.
 It's
 not
 going


to
 matter
 in
 the
 grand
 scheme
 of
 things.


So
 we
 had
 gone
 to
 a
 couple
 million
 in


revenue
 at
 that
 time.
 I
 think
 the
 hard


part
 for
 us
 was
 it
 felt
 very
 ad
 hoc
 how


we
 were
 adding
 revenue
 to
 the
 business.


It
 also
 felt
 like
 with
 the
 advent
 of


these
 generative
 models,
 a
 lot
 of
 the


complexity
 of
 running
 models
 would


become
 commoditized.
 If
 everyone
 is


going
 to
 run
 transformers,
 uh
 the


transformer
 model
 architecture,
 what
 is


the
 reason
 for
 us
 to
 have
 a
 platform


that
 virtualizes
 arbitrary
 GPU


computations?
 It's
 not
 as
 important


anymore.
 So,
 it's
 a
 factor
 of
 two


things.
 We
 didn't
 understand
 how
 we


could
 10
 or
 100x
 sales,
 right?
 I
 think


you
 build
 a
 company
 not
 to
 make
 a
 couple


million
 in
 revenue,
 but
 billions
 of


dollars
 in
 revenue.
 So
 we
 didn't


understand
 how
 to
 even
 get
 within
 an


order
 of
 magnitude
 of
 that
 right
 that


was
 one
 and
 two
 we
 also
 felt
 that
 the


problem
 we
 were
 solving
 with
 the
 advent


of
 the
 generative
 models
 was
 going
 to


get
 commoditized.
 So
 at
 that
 point
 it's


kind
 of
 an
 easy
 thing
 once
 you
 believe


that
 something
 is
 not
 going
 to
 be
 big


you
 have
 no
 other
 option
 but
 to
 change


your
 mind
 and
 do
 something
 new
 that
 is


very
 painful
 because
 you
 did
 commit
 a


lot
 of
 time
 and
 a
 lot
 of
 energy
 and


passion
 to
 one
 thing.
 You
 don't
 win
 an


award
 for
 doing
 the
 wrong
 thing
 for


longer.
 I
 guess
 me
 and
 my
 co-founder
 did


a
 walk
 over
 a
 weekend
 and
 I
 guess
 we


decided
 over
 a
 weekend
 and
 we
 told
 the


team
 on
 Monday.
 Um
 and
 then
 everyone


started
 working
 on
 the
 new
 thing


starting
 Monday.
 Uh
 yeah,
 I
 guess
 we


just
 you
 know
 one
 of
 the
 core
 beliefs


that
 we
 have
 about
 startups
 is
 startups


can
 if
 they're
 lucky
 do
 one
 thing
 really


well.
 We
 could
 not
 afford
 to
 have
 the


company
 believe
 two
 things
 were


important.
 So
 we
 would
 need
 to
 rip
 the


band-aid
 off
 and
 actually
 make
 it
 very


clear
 to
 the
 rest
 of
 the
 company
 that


the
 new
 thing
 was
 where
 we
 thought
 the


future
 was.
 You
 know,
 it's
 interesting.


I
 would
 we
 were
 not
 worried
 at
 all
 when


we
 did
 the
 pivot.
 We
 had
 basically


written
 off
 the
 company
 is
 going
 to
 be
 a


zero
 and
 at
 that
 point
 anything
 is


greater
 than
 zero.
 Ship
 whatever
 you
 can


if
 it
 sucks
 you're
 in
 the
 same
 place


that
 you
 are.
 If
 it
 doesn't
 suck
 like


great
 awesome
 only
 upside
 just
 honesty,


transparency
 and
 int
 like
 intellectual


honesty
 with
 the
 team
 is
 maybe
 a
 core


tenant
 of
 the
 company.
 We
 don't
 do


things
 unless
 we
 like
 truly
 believe
 they


are
 the
 right
 thing
 to
 do.
 even
 if
 it


like
 fits
 some
 narrative
 that
 the
 rest


of
 the
 industry
 or
 our
 investors
 or


convenient
 belief
 we
 believe
 things
 if


from
 first
 principles
 they're
 correct


and
 you
 know
 I
 guess
 one
 true
 fact
 was


after
 telling
 our
 employees
 there's
 a


real
 chance
 that
 some
 of
 them
 would


leave
 but
 I
 think
 like
 when
 you
 build
 a


highquality
 culture
 where
 the
 people
 are


are
 intellectually
 honest
 um
 good
 people


don't
 want
 to
 leave
 if
 you
 if
 you
 chart


a
 path
 for
 what
 the
 thing
 that
 does
 work


is
 right
 because
 you
 know
 one


interesting
 thing
 about
 startups
 is


people
 talk
 a
 lot
 about
 moes.
 What's
 the


mode
 of
 a
 company?
 But
 really,
 what
 is


the
 mode
 of
 a
 company
 that
 has
 10


people?
 You
 know,
 if
 you
 do
 have
 a
 moat,


it's
 very
 shallow
 at
 best,
 right?
 The


number
 of
 engineering
 years
 that
 went


into
 your
 product
 is
 already
 very
 small.


So,
 the
 real
 moat
 is
 you
 work
 on
 the


right
 thing
 with
 enough
 people
 for
 long


enough.
 That's
 like
 the
 only
 moat
 a


startup
 ultimately
 has.
 And
 that's
 like


why
 you
 believe
 in
 a
 team.
 Obviously,


when
 a
 company
 becomes
 thousands
 of


people,
 hopefully
 the
 moat
 is
 not
 the


current
 business.
 It
 would
 be
 sad
 if
 the


moat
 was
 the
 company
 can
 just
 pivot
 and


do
 the
 next
 thing.
 In
 that
 regard,
 I


think
 if
 you
 genuinely
 believe
 the


motive
 of
 a
 of
 a
 company
 is
 betting
 on


the
 right
 things
 and
 and
 hiring
 a
 great


group
 of
 people,
 then
 if
 you
 are


intellectually
 honest
 with
 your
 team
 and


tell
 them
 we
 don't
 believe
 in
 the


strategy
 we
 just
 had,
 it's
 should
 be


totally
 fine
 with
 everyone.


This
 episode
 is
 sponsored
 by
 Atio,
 the


AI
 native
 CRM
 for
 the
 next
 era
 of


companies.
 Connect
 your
 email
 and
 ATIO


instantly
 builds
 your
 CRM
 right
 before


your
 eye
 with
 every
 company,
 contact,


and
 interaction
 you've
 ever
 had
 enriched


and
 organized.
 That's
 ATIO.
 And
 here's


what
 makes
 it
 even
 more
 game-changing.


You
 can
 build
 AI
 powered
 automations
 and


use
 its
 research
 agents
 to
 tackle
 some


of
 your
 most
 complex
 business
 processes,


freeing
 you
 to
 focus
 on
 what
 matters


most,
 building
 your
 company.
 Join


thousands
 of
 companies
 who
 are
 already


using
 to
 power
 their
 businesses.
 Visit


the
 link
 in
 the
 description
 to
 begin


your
 twoe
 free
 trial
 with
 Atio.


I
 think
 we
 were
 early
 adopters
 of
 a


product
 like
 GitHub
 copilot.
 So
 we
 and


we
 were
 we
 actually
 built
 a
 lot
 of


infrastructure.
 So
 at
 the
 time
 we


thought
 that
 was
 the
 tip
 of
 the
 iceberg


of
 what
 the
 technology
 could
 actually


build.
 We
 thought
 a
 lot
 more
 could
 be


built
 in
 this
 category.
 Right?
 If
 all


people
 were
 doing
 was
 autocompleting,
 we


could
 potentially
 see
 a
 world
 in
 which


entire
 PRs
 would
 get
 generated.
 And
 at


that
 time,
 we
 were
 like,
 okay,
 the
 time


it
 takes
 to
 build
 applications
 probably


has
 gone
 down
 by
 a
 double
 digit
 percent.


Why
 don't
 we
 set
 the
 goal
 of
 the
 company


to
 reduce
 the
 time
 it
 takes
 to
 build


technology
 by
 99%.
 It's
 a
 very
 ambitious


goal,
 not
 something
 we'd
 be
 able
 to
 do


in
 the
 next
 year
 or
 two.
 But
 if
 we
 set
 a


very
 ambitious
 goal,
 there's
 probably
 a


lot
 of
 work
 to
 be
 done
 in
 this
 space.
 We


believe
 that
 technology
 is
 always
 going


to
 get
 better.
 We
 believe
 the
 models
 are


going
 to
 get
 better.
 Because
 of
 that,
 we


just
 believed
 there
 was
 a
 lot
 of


opportunity
 here.
 Because
 we
 were
 also


an
 infrastructure
 company
 at
 the
 time,


we
 were
 able
 to
 train
 our
 own
 models
 and


run
 models
 ourselves,
 which
 enabled
 us


to
 build
 an
 extension
 that
 was
 entirely


free
 in
 all
 the
 major
 IDs.
 And
 uh
 that


was
 able
 to
 very
 quickly
 get
 to
 hundreds


of
 thousands
 of
 users.
 It
 was
 a


combination
 of
 what
 our
 skill
 set
 was,


also
 a
 belief
 of
 where
 we
 thought
 the


future
 was
 going.
 I
 think
 it
 took
 us


less
 than
 2
 months
 to
 build
 the
 MVP
 and


ship
 it
 out.
 I
 think
 as
 a
 company
 we're


probably
 more
 of
 the
 opinion
 of
 if
 you


are
 going
 to
 do
 something
 hard
 um
 it
 is


actually
 important
 to
 have
 intermediate


goals
 that
 you
 can
 actually
 give
 to


other
 people
 to
 validate
 your


hypothesis.
 That's
 maybe
 something
 that


we
 learned
 a
 lot
 of
 us
 at
 the
 company


were
 previously
 from
 autonomous
 vehicles


and
 I
 think
 one
 of
 the
 biggest
 mistakes


that
 autonomous
 vehicle
 companies
 might


have
 made
 is
 maybe
 to
 no
 fault
 of
 their


own
 was
 they
 built
 a
 hard
 technology


where
 it's
 very
 hard
 to
 validate
 if
 the


technology
 is
 good
 in
 the
 middle.
 Right?


So
 for
 us
 it's
 always
 been
 it
 is


actually
 a
 feature
 if
 you
 can
 have
 a


very
 very
 like
 visionary
 goal
 but
 have


very
 tractable
 intermediate
 steps
 and
 so


we
 actually
 picked
 a
 very
 tractable


intermediate
 step
 to
 deploy
 which
 was


can
 we
 build
 a
 basic
 VS
 code
 extension


that
 had
 autocomplete
 capabilities
 uh


with
 our
 own
 model
 and
 that
 was
 that
 was


the
 intermediate
 goal
 that
 we
 had
 and
 we


believed
 you
 know
 maybe
 it
 was
 like
 a


little
 bit
 of
 necessity
 we
 just
 pivoted


the
 company
 people
 were
 not
 working
 on


anything
 else
 there
 was
 an
 existential


dread
 what
 the
 value
 of
 the
 product
 was


so
 we
 very
 quickly
 built
 it.
 I
 think
 a


basic
 form
 of
 product
 market
 fit
 was


when
 our
 inbound
 for
 the
 product
 from


like
 companies
 was
 was
 more
 than
 like


any
 of
 us
 could
 handle
 and
 we
 did
 need


to
 hire
 a
 real
 go
 to
 market
 team.
 I


think
 at
 that
 point
 we
 realized
 hey


we're
 actually
 solving
 a
 real
 pain
 for


the
 market
 and
 we
 are
 providing
 a
 lot
 of


value.
 So
 that
 was
 that
 happened
 very


quickly
 like
 within
 months
 of
 the


product
 coming
 out
 we
 had
 a
 lot
 of


companies
 reaching
 out
 to
 how
 could
 they


run
 the
 product
 uh
 for
 themselves
 and


and
 use
 it
 for
 their
 large
 code
 bases.


Yeah,
 I
 think
 the
 word
 product
 market


fit
 is
 probably
 something
 I
 don't
 like
 a


lot
 because
 it
 it
 creates
 a
 lot
 of
 like


overconfidence.
 I
 think
 what
 what
 you


have
 as
 product
 market
 fit
 in
 one
 day,


if
 you
 don't
 continue
 to
 innovate
 and


you
 have
 competitors,
 is
 very
 quickly


going
 to
 become
 a
 commodity
 where
 you


don't
 have
 product
 market
 fit.
 So,
 you


need
 to
 be
 very
 paranoid.
 I
 always
 like


to
 tell
 the
 company
 we're
 probably
 going


to
 fail.
 And
 I
 think
 the
 good
 thing


about
 telling
 the
 company
 we're
 probably


going
 to
 fail
 is
 it
 creates
 enough
 sort


of
 energy
 in
 the
 company
 to
 find
 the


next
 thing
 that
 keeps
 you
 as
 a


differentiated
 product
 and
 and
 survive


in
 a
 in
 a
 space.
 But
 I
 think
 in
 general


like
 product
 like
 I
 feel
 like
 if
 you


have
 pull
 from
 the
 market,
 it's
 very


hard
 to
 fake
 it.
 It's
 it's
 very
 obvious


when
 you
 have
 it
 and
 very
 obvious
 when


you
 don't.
 And
 I'll
 tell
 you
 this
 like


even
 when
 we
 were
 making
 a
 couple


million
 in
 revenue
 with
 the
 GPU


virtualization
 business
 is
 very
 obvious


we
 didn't
 have
 product
 market
 fit.
 It's


not
 a
 scalable
 company.
 you
 don't
 really


understand
 how
 you
 can
 grow
 revenue
 and


find
 find
 a
 way
 to
 like
 provide
 more


value
 at
 scale.
 So
 very
 quickly
 I
 think


a
 lot
 of
 large
 companies
 were
 starting


to
 reach
 out
 to
 us
 for
 a
 variety
 of


reasons
 for
 security
 reasons
 because
 we


were
 able
 to
 run
 models
 ourselves.
 We


were
 able
 to
 run
 it
 in
 a
 secure
 way.
 The


other
 thing
 is
 they
 wanted
 the
 systems


to
 work
 with
 their
 complicated
 sort
 of


code
 bases.
 Right?
 Their
 code
 bases
 are


not
 simple.
 Some
 of
 our
 customers
 have


tens
 of
 millions
 of
 lines
 of
 code
 in
 a


single
 codebase.
 and
 we
 started
 building


more
 and
 more
 technology
 to
 make
 it


possible
 that
 we
 would
 give
 very


personalized
 suggestions
 to
 them


regardless
 of
 where
 they
 stored
 their


code.
 I
 guess
 very
 quickly
 we
 started
 to


get
 to
 100
 customers.
 It
 went
 from
 going


from
 zero
 to
 100
 customers
 probably


within
 months
 um
 at
 the
 company.
 I
 think


the
 feedback
 that
 was
 kind
 of


interesting
 to
 us
 is
 how
 important
 just


small
 details
 were
 right
 to
 the
 entire


user
 experience.
 We
 started
 off
 as
 an


infrastructure
 company
 and
 we
 needed
 to


kind
 of
 become
 a
 product
 company
 which


is
 a
 big
 kind
 of
 change.
 You
 know
 basic


things
 like
 the
 latency
 of
 the
 product


how
 quickly
 we
 provide
 suggestions
 was


quite
 important.
 You
 know
 just
 basic


things
 if
 we
 do
 too
 much
 computation
 on


the
 user's
 machine
 and
 it
 kind
 of
 like


makes
 the
 machine
 too
 slow
 that's
 a


unacceptable
 user
 experience
 that
 is
 not


something
 we
 would
 think
 about
 if
 we


were
 purely
 a
 server-based
 application.


So
 there
 were
 kind
 of
 new
 things
 as
 a


company
 we
 needed
 to
 learn
 because
 the


space
 we
 were
 operating
 in
 was


fundamentally
 different.
 I
 think


basically
 what
 happens
 is
 once
 a
 company


gets
 bigger
 it's
 possible
 that
 you
 start


losing
 the
 reason
 why
 you
 had
 a
 good


product
 to
 start
 with
 right
 you
 start


listening
 actually
 in
 some
 ways
 too
 much


customer
 obsession
 might
 be
 bad
 in
 that


if
 you
 do
 things
 that
 all
 of
 your


customers
 ask
 you
 to
 do
 sometimes
 you


might
 like
 incrementally
 iterate
 to


actually
 build
 a
 really
 bad
 product
 and


it's
 actually
 better
 off
 to
 completely


change
 the
 paradigm
 in
 a
 way
 that
 your


customers
 don't
 really
 ask
 for
 because


you
 you
 suspect
 it
 could
 be
 helpful.
 So


there's
 like
 a
 little
 bit
 of
 a
 healthy


amount
 of
 don't
 just
 listen
 to
 random


people
 about
 what
 you
 should
 build.


Listen
 to
 your
 customers,
 but
 don't


listen
 to
 your
 customers
 in
 how
 you


should
 build
 it.
 There
 could
 be
 a
 way


you
 could
 build
 it
 in
 a
 way
 that
 is
 very


transformational,
 but
 not
 something
 that


they
 would
 even
 expect.
 One
 of
 the


things
 about
 our
 product
 is
 we
 have
 a


pretty
 large
 individual
 product
 and
 we


have
 ways
 in
 which
 our
 users
 can


communicate
 with
 us,
 you
 know,
 either


online
 on
 social
 media.
 Uh,
 and
 I
 guess


I
 I
 look
 through
 it
 fairly
 frequently
 to


understand
 what
 the
 pain
 points
 our


users
 have
 about
 the
 product.
 Also
 at


the
 same
 time
 I
 guess
 like
 everyone
 at


the
 company
 uses
 the
 product
 almost


day-to-day
 which
 is
 maybe
 a
 unique


aspect
 of
 the
 product
 right
 there
 are


probably
 a
 lot
 of
 AI
 tools
 out
 there
 but


the
 people
 building
 the
 tools
 are
 not


using
 them
 all
 the
 time
 whereas
 the


people
 that
 build
 our
 products
 literally


use
 our
 product
 to
 build
 the
 product


whether
 it
 be
 windsurf
 everyone
 builds


software
 on
 windsurf
 for
 windsurf
 which


is
 a
 unique
 way
 for
 us
 to
 actually
 get


feedback
 a
 lot
 of
 our
 feedback
 is


internal
 and
 if
 no
 one
 at
 the
 company


likes
 a
 part
 of
 the
 product
 it's


unlikely
 that
 a
 lot
 of
 people
 outside
 of


the
 company
 are
 going
 to
 like
 the


No,
 I
 I
 always
 try
 to
 run
 the
 company
 as


like
 the
 smallest
 company
 it
 can
 be.
 But


I
 think
 the
 goal
 of
 a
 company
 is
 not
 to


be
 a
 small
 company.
 I
 think
 the
 goal
 of


a
 company
 is
 to
 actually
 provide
 the


most
 value
 in
 a
 space.
 If
 the
 right
 way


to
 do
 that
 is
 be
 a
 bigger
 company.
 I


think
 that's
 like
 the
 right
 thing
 you


should
 sort
 of
 do.
 One
 of
 the
 operating


principles
 we
 sort
 of
 have
 at
 the


company
 is
 we
 try
 to
 run
 the
 company


fairly
 lean.
 And
 that
 doesn't
 mean
 we


have
 very
 few
 people.
 It
 just
 means
 that


for
 a
 given
 amount
 of
 ambition,
 we
 are


the
 smallest
 company
 we
 could
 possibly


be.
 And
 that
 means
 that
 people
 are


largely
 speaking
 underwater
 most
 of
 the


time.
 Hopefully
 like
 we
 don't
 have
 large


amounts
 of
 people
 that
 have
 too
 little


to
 do,
 right?
 The
 goal
 is
 everyone


should
 have
 too
 much
 to
 do.
 And
 because


of
 that,
 that
 forces
 rapid


prioritization
 inside
 the
 company
 with
 a


lot
 of
 urgency
 that
 triggers
 whether
 or


not
 we
 should
 hire
 people.
 And
 honestly,


that
 itself
 is
 a
 good
 forcing
 function


of
 how
 you
 should
 scale
 a
 company.
 You


scale
 a
 company
 when
 everyone
 is


underwater
 and
 the
 moment
 people
 are
 no


longer
 underwater,
 we
 don't
 scale
 the


company
 anymore.
 I
 think
 in
 in
 terms
 of


just
 some
 of
 the
 challenges
 obviously


like
 as
 the
 company
 gets
 bigger,


communication
 gets
 harder.
 So
 there
 are


some
 processes
 in
 place
 in
 terms
 of
 you


want
 to
 ship
 a
 feature,
 it's
 no
 longer


just
 one
 person
 did
 everything
 end
 to


end.
 There
 are
 like
 many
 different


parties
 involved.
 Uh
 but
 I
 think
 we


added
 more
 process
 in
 place
 to
 make
 sure


that
 even
 that
 could
 happen
 much
 faster.


If
 you
 run
 the
 company
 in
 a
 way
 where


everyone
 has
 their
 own
 set
 of


priorities,
 I
 think
 it's
 it's
 cool.


Everyone's
 kind
 of
 having
 a
 good
 time.


But
 I
 think,
 you
 know,
 this
 boils
 down


to
 why
 do
 companies
 work?
 I
 think
 they


work
 if
 you
 do
 one
 or
 two
 things
 really


well.
 Maybe
 even
 one.
 Forget
 about
 two,


maybe
 even
 one.
 The
 problem
 is
 then


actually
 if
 you
 were
 to
 imagine
 in
 a
 lot


of
 cases,
 it's
 very
 hard
 to
 just
 have


infinitely
 many
 people
 doing
 one
 thing


really
 well.
 So
 that
 naturally
 reduces


the
 number
 of
 people
 that
 you
 have
 at


the
 company.
 Yeah.
 I
 guess
 I
 guess
 the


the
 issue
 is
 naturally
 when
 you
 have


more
 people,
 they're
 going
 to
 be
 more


priorities,
 right?
 Like
 people
 are
 not


malicious,
 but
 they
 want
 to
 have


something
 to
 do.
 If
 there
 are
 enough


people
 to
 do
 what
 the
 original
 intent
 of


the
 company
 was,
 they're
 going
 to
 find


other
 things
 to
 do
 and
 that's
 going
 to


cause
 problems
 internally
 as
 well.
 One


of
 the
 things
 that
 I've
 sort
 of
 done
 is


I
 still
 interview
 everyone
 that
 joins


the
 company,
 make
 sure
 that
 they
 go


through
 a
 culture
 fit.
 I
 think
 that's


actually
 like
 quite
 important
 to
 me
 to


make
 sure
 that
 we
 are
 adding
 people
 that


are
 going
 to
 like
 maintain
 and
 preserve


and
 maybe
 even
 even
 just
 embrace
 the


culture
 we
 have
 inside
 the
 company.
 So
 I


think
 that's
 like
 honestly
 honestly
 like


a
 very
 key
 thing
 that
 I've
 not
 given
 up


even
 as
 the
 company
 has
 scaled
 you
 know


close
 to
 200
 people.
 I
 I
 think
 actually


it's
 the
 same
 principles
 that
 made
 the


company
 work
 when
 it's
 small.
 I
 I
 think


big
 companies
 are
 not
 that
 different


than
 small
 companies.
 Maybe
 it's
 hard
 to


operate
 like
 a
 small
 company
 when
 you're


a
 big
 company
 but
 I
 think
 if
 you
 were
 to


ask
 every
 big
 company
 they
 want
 to


operate
 like
 a
 startup.
 I
 think
 the
 very


hard
 thing
 is
 once
 again
 intellectual


honesty.
 It's
 very
 hard
 as
 the
 company


gets
 bigger
 for
 for
 a
 large
 group
 of


people
 to
 analyze
 what
 they're
 doing
 and


to
 say,
 "Hey,
 we
 should
 stop
 working
 on


this
 or
 should
 work
 on
 something
 else."


It
 gets
 very
 hard
 because
 people
 feel


some
 sort
 of
 safety
 as
 the
 company
 gets


bigger.
 But
 the
 reality
 is
 like
 no


company
 is
 really
 safe
 regardless
 of
 the


size.
 And
 that's
 how
 every
 company


should
 be
 operating.
 They
 should
 be


operating
 as
 if
 almost
 existential


dread.
 Not
 in
 that
 it's
 causing


paralysis,
 but
 in
 that
 it
 causes
 the


agency
 to
 kind
 of
 figure
 out
 what
 the


next
 thing
 to
 do
 is.
 Yeah.
 I
 think


people
 get
 they
 feel
 safety,


psychological
 safety
 by
 feeling
 that


what
 they're
 working
 on
 is
 the
 most


important
 thing,
 right?
 I
 think,
 you


know,
 people
 it's
 very
 hard
 to
 keep
 in


your
 head,
 hey,
 like
 let
 me
 go
 work
 hard


on
 something,
 but
 all
 the
 while
 it
 may


not
 be
 that
 useful
 for
 the
 company.
 And


I
 think
 as
 a
 company
 gets
 bigger,
 it's


very
 hard
 to
 have
 people
 that
 just
 still


don't
 have
 the
 psychological
 safety.


Maybe
 one
 interesting
 thing
 about
 the


company
 is
 I
 think
 companies
 have
 like


two
 sides
 attached
 to
 them,
 which
 is


that
 you
 need
 some
 form
 of
 irrational


optimism.
 The
 reason
 why
 you
 need


irrational
 optimism
 is
 without
 some


amount
 of
 optimism,
 there's
 no
 reason
 a


startup
 ever
 wins
 at
 anything.
 A
 big


company
 has
 more
 capital,
 more


resources,
 more
 distribution.
 So
 you


need
 to
 believe
 you
 can
 do
 something


better,
 right?
 With
 great
 people,
 uh
 you


can
 somehow
 build
 something
 that's


generational.
 You
 have
 to
 believe
 that.


Uh
 which
 is
 in
 most
 cases
 not
 true,


right?
 So
 you
 somehow
 need
 to
 believe


that.
 But
 also
 at
 the
 same
 time,


sometimes
 that's
 just
 not
 going
 to
 be


the
 case.
 And
 you
 need
 to
 be
 very


realistic.
 And
 I
 think
 this
 comes
 with,


you
 know,
 uncompromising
 realism.
 Like


you
 need
 a
 healthy
 amount
 of
 both.
 You


need
 you
 need
 the
 optimism
 to
 go
 out
 and


do
 something
 when
 everyone
 else
 believes


it's
 not
 that
 valuable
 because
 if


everyone
 else
 believed
 it
 was
 valuable,


the
 big
 company
 would
 do
 it
 and
 you


would
 still
 lose.
 But
 all
 the
 while
 you


also
 need
 to
 agree
 most
 ideas
 are
 bad


ideas
 and
 you
 need
 to
 kill
 your
 ideas


fairly
 quickly
 as
 well.
 This
 is
 this
 is


like
 this
 tension
 that
 a
 company
 is


always
 going
 through.
 It
 progressively


gets
 harder
 and
 harder.
 The
 company
 gets


bigger.
 Uh
 but
 I
 think
 it's
 a
 strength


if
 a
 company
 can
 do
 that
 regardless
 of


what
 size
 it
 is.


Yeah.
 I
 think
 the
 only
 thing
 is
 that
 I


would
 sort
 of
 like
 to
 say
 is
 build
 for


where
 you
 think
 the
 technology
 is
 going,


not
 for
 today,
 right?
 And
 don't
 build


probably
 technologies
 in
 places
 that


like
 are
 as
 good
 as
 they
 will
 be
 given


where
 the
 technology
 is
 today.
 It
 feels


like
 it's
 going
 to
 be
 very
 hard
 to


differentiate
 in
 the
 long
 term.
 And


that's
 a
 hard
 thing
 to
 do,
 right?
 Uh


that
 means
 you
 you
 you
 actually
 need
 to


be
 willing
 to
 work
 on
 something
 that


doesn't
 feel
 like
 it's
 working
 for


maybe,
 you
 know,
 an
 indeterminate
 period


of
 time.
 I
 think
 what
 this
 means
 is


these
 kind
 of
 short-term
 heristics
 that


you
 invest
 deeply
 in
 that
 make
 a
 model


today
 work
 are
 probably
 actually
 have


massive
 diminishing
 returns
 because
 the


next
 model
 is
 going
 to
 be
 much
 better


and
 the
 heristics
 are
 going
 to
 be


unnecessary.
 I
 think
 the
 things
 that
 are


important
 are
 how
 do
 you
 actually
 take


advantage
 of
 the
 fact
 that
 you
 do
 have
 a


lot
 of
 users
 and
 build
 better


experiences
 for
 them
 and
 actually


because
 they
 are
 using
 your
 product


you're
 able
 to
 build
 better
 and
 better


experiences
 for
 them
 and
 these


experiences
 are
 better
 and
 learned
 in
 a


way
 they're
 actually
 learned
 from
 the


way
 people
 use
 the
 product
 and
 I
 think


you
 should
 be
 focusing
 on
 that
 not
 on


kind
 of
 cosmetic
 things
 that
 make
 a


model
 kind
 of
 magically
 do
 something


that
 probably
 is
 going
 to
 happen
 anyways


in
 6
 months.